[{"C:\\Users\\Dan\\Documents\\ReactJs Work\\ReactJS Basics Expenses Project\\src\\index.js":"1","C:\\Users\\Dan\\Documents\\ReactJs Work\\ReactJS Basics Expenses Project\\src\\App.js":"2","C:\\Users\\Dan\\Documents\\ReactJs Work\\ReactJS Basics Expenses Project\\src\\components\\Expenses\\Expenses.jsx":"3","C:\\Users\\Dan\\Documents\\ReactJs Work\\ReactJS Basics Expenses Project\\src\\components\\Expenses\\ExpenseItem.jsx":"4","C:\\Users\\Dan\\Documents\\ReactJs Work\\ReactJS Basics Expenses Project\\src\\components\\UI\\BaseCard.jsx":"5","C:\\Users\\Dan\\Documents\\ReactJs Work\\ReactJS Basics Expenses Project\\src\\components\\Expenses\\ExpenseDate.jsx":"6","C:\\Users\\Dan\\Documents\\ReactJs Work\\ReactJS Basics Expenses Project\\src\\components\\NewExpense\\NewExpense.jsx":"7","C:\\Users\\Dan\\Documents\\ReactJs Work\\ReactJS Basics Expenses Project\\src\\components\\NewExpense\\NewExpenseForm.jsx":"8"},{"size":142,"mtime":1629727061333,"results":"9","hashOfConfig":"10"},{"size":1174,"mtime":1630074340210,"results":"11","hashOfConfig":"10"},{"size":1593,"mtime":1629927548126,"results":"12","hashOfConfig":"10"},{"size":2385,"mtime":1630072860720,"results":"13","hashOfConfig":"10"},{"size":1099,"mtime":1629927318474,"results":"14","hashOfConfig":"10"},{"size":882,"mtime":1629927353752,"results":"15","hashOfConfig":"10"},{"size":255,"mtime":1630074285615,"results":"16","hashOfConfig":"10"},{"size":2027,"mtime":1630076763282,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ps571t",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\Users\\Dan\\Documents\\ReactJs Work\\ReactJS Basics Expenses Project\\src\\index.js",[],["36","37"],"C:\\Users\\Dan\\Documents\\ReactJs Work\\ReactJS Basics Expenses Project\\src\\App.js",[],"C:\\Users\\Dan\\Documents\\ReactJs Work\\ReactJS Basics Expenses Project\\src\\components\\Expenses\\Expenses.jsx",[],"C:\\Users\\Dan\\Documents\\ReactJs Work\\ReactJS Basics Expenses Project\\src\\components\\Expenses\\ExpenseItem.jsx",[],"C:\\Users\\Dan\\Documents\\ReactJs Work\\ReactJS Basics Expenses Project\\src\\components\\UI\\BaseCard.jsx",[],"C:\\Users\\Dan\\Documents\\ReactJs Work\\ReactJS Basics Expenses Project\\src\\components\\Expenses\\ExpenseDate.jsx",[],"C:\\Users\\Dan\\Documents\\ReactJs Work\\ReactJS Basics Expenses Project\\src\\components\\NewExpense\\NewExpense.jsx",[],"C:\\Users\\Dan\\Documents\\ReactJs Work\\ReactJS Basics Expenses Project\\src\\components\\NewExpense\\NewExpenseForm.jsx",["38","39","40"],"import { useState } from 'react';\r\nimport './NewExpenseForm.css';\r\n\r\nconst NewExpenseForm = (props) => {\r\n    //defualt when you listen to change change event on the input element\r\n    //it will always be a string so we always use a string with our state. like below.\r\n    const [enteredTitle, setEnteredTitle] =  useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n   \r\n   const titleChangeHandler = (event) => {\r\n        //here we are calling our updatingFunction i.e\r\n        //setEnteredTitle and passing in event.target.value as the param.\r\n        //to get the entered value provided by the user\r\n        setEnteredTitle(event.target.value);\r\n    }\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n    }\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <form>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label htmlFor=\"\">Title:</label>\r\n                    {/* onChange can trigger on every key stroke and use the same event on all input types */}\r\n                    <input type=\"text\" onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label htmlFor=\"\">Amount:</label>\r\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label htmlFor=\"\">Date:</label>\r\n                    <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler} />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewExpenseForm;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":7,"column":12,"nodeType":"47","messageId":"48","endLine":7,"endColumn":24},{"ruleId":"45","severity":1,"message":"49","line":8,"column":12,"nodeType":"47","messageId":"48","endLine":8,"endColumn":25},{"ruleId":"45","severity":1,"message":"50","line":9,"column":12,"nodeType":"47","messageId":"48","endLine":9,"endColumn":23},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'enteredTitle' is assigned a value but never used.","Identifier","unusedVar","'enteredAmount' is assigned a value but never used.","'enteredDate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]